name: Deploy Build leptos site to GitHub Pages
on:
  # Runs on pushes targeting the default branch and only changes to code related files
  push:
    branches: ["main"]
    paths:
      - "src/**"
      - "assets/**"
      - "rust-toolchain.toml"
      - "Cargo.lock"
  pull_request: # TODO: remove this after finishing testing
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: jdx/mise-action@v2
        with:
          experimental: true
          log_level: debug

      # - uses: actions-rust-lang/setup-rust-toolchain@v1
      #   with:
      #     cache: false

      - run: echo RUSTUP_SYSROOT=$(rustc --print sysroot) >> $GITHUB_ENV

      - uses: Swatinem/rust-cache@v2
        with:
          cache-directories: "${{env.RUSTUP_SYSROOT }}/lib\n./target"
          cache-targets: "false"

      - name: Install minimal needed rust toolchain
        run: rustup toolchain install --profile minimal

      - name: Build application in release mode
        run: mise run build:release

      # - name: upload target artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     path: target

      # - name: Upload static files as artifact
      #   id: deployment
      #   uses: actions/upload-pages-artifact@v3
      #   with:
      #     path: ./dist

  # Deploy job
  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # or specific "vX.X.X" version tag for this action
